version: "3.8"
services:

  backend:
    image: docker.io/library/backstage
    environment:
      ROLLBAR_ACCOUNT_TOKEN: 'x'
      SENTRY_TOKEN: 'x'
      AUTH_GITHUB_CLIENT_ID: ${AUTH_GITHUB_CLIENT_ID}
      AUTH_GITHUB_CLIENT_SECRET: ${AUTH_GITHUB_CLIENT_SECRET}
      GITHUB_TOKEN: ${GITHUB_TOKEN}
      JENKINS_BASIC_AUTH_HEADER: ${JENKINS_BASIC_AUTH_HEADER}
      POSTGRES_HOST: db
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      AUTH_MICROSOFT_TENANT_ID: ${AUTH_MICROSOFT_TENANT_ID}
      AUTH_MICROSOFT_CLIENT_ID: ${AUTH_MICROSOFT_CLIENT_ID}
      AUTH_MICROSOFT_CLIENT_SECRET: ${AUTH_MICROSOFT_CLIENT_SECRET}
    ports:
      - "7000:7000"
  frontend:
    build: .
    image: hmctspublic.azurecr.io/backstage/frontend:v8
    ports:
      - "3000:80"

  db:
    image: postgres:12.3
    #command: -c ssl=on -c ssl_cert_file=/var/lib/postgresql/server.crt -c ssl_key_file=/var/lib/postgresql/server.key
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
        #- ./pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
      #- ./ca/server.crt:/var/lib/postgresql/server.crt
      #- ./ca/server.key:/var/lib/postgresql/server.key

volumes:
  db-data:
